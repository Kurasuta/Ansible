- name: create user
  user: name=kurasuta

- name: create directory
  file: path=/opt/kurasuta state=directory owner=kurasuta group=kurasuta

- name: create virtualenv and install dependencies
  become_user: kurasuta
  pip:
    name: "{{ item }}"
    virtualenv: /opt/kurasuta/.venv
    virtualenv_python: python3
  with_items:
    - requests

- name: copy script to get read arguments used in commands tracked by Sentry
  template:
    src: templates/list-sentry-event-arguments.py
    dest: /opt/kurasuta/list-sentry-event-arguments.py
    owner: kurasuta
    mode: 0755

- name: create user
  user: name=backend_rest_api

- name: create directory
  file: path=/opt/Server state=directory owner=backend_rest_api group=backend_rest_api

- name: clone git repo
  become_user: backend_rest_api
  git: repo=https://github.com/Kurasuta/Server.git dest=/opt/Server force=yes

- name: python dependencies
  become_user: root
  pip:
    name: "{{ item }}"
    executable: pip3
  with_items:
    - flask
    - raven

- name: create user for frontend API
  user: name=frontend_api

- name: create directory for frontend API
  file: path=/opt/FrontendApi state=directory owner=frontend_api group=frontend_api

- name: clone git repo for frontend API
  become_user: frontend_api
  git: repo=https://github.com/Kurasuta/FrontendApi.git dest=/opt/FrontendApi force=yes

- name: python dependencies
  become_user: root
  pip:
    name: "{{ item }}"
    executable: pip3
  with_items:
    - flask
    - raven

- name: copy scripts that generate stats
  copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/"
    mode: 0755
  with_items:
    - postgres-count-rows
    - postgres-database-size
    - kurasuta-assigned-incomplete-r2-tasks
    - kurasuta-assigned-incomplete-tasks
    - kurasuta-unassigned-r2-tasks
    - kurasuta-unassigned-tasks
    - kurasuta-samples-without-source

- name: create cron job for number of running backend REST API services
  cron:
    name: backend rest api count
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.backend_rest_api.process_count -o $(ps x -u backend_rest_api | grep '/opt/Server/server.py' | grep -v grep | wc -l) > /dev/null"

- name: create cron job for number of running frontend REST API services
  cron:
    name: frontend rest api count
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.frontend_rest_api.process_count -o $(ps x -u frontend_api | grep '/opt/FrontendApi/frontend-api.py' | grep -v grep | wc -l) > /dev/null"

- name: create cron job for database size
  cron:
    name: database size
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.database.size -o $(su - postgres -c '/usr/local/bin/postgres-database-size kurasuta') > /dev/null"

- name: create cron job for sample count
  cron:
    name: sample count
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.database.sample.count -o $(su - postgres -c '/usr/local/bin/postgres-count-rows kurasuta sample') > /dev/null"

- name: create cron job for function count
  cron:
    name: function count
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.database.function.count -o $(su - postgres -c '/usr/local/bin/postgres-count-rows kurasuta sample_function') > /dev/null"

- name: create cron job for incomplete tasks
  cron:
    name: incomplete tasks
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.task.incomplete.count -o $(su - postgres -c '/usr/local/bin/kurasuta-assigned-incomplete-tasks') > /dev/null"

- name: create cron job for unassigned tasks
  cron:
    name: unassigned tasks
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.task.unassigned.count -o $(su - postgres -c '/usr/local/bin/kurasuta-unassigned-tasks') > /dev/null"

- name: create cron job for unassigned R2 tasks
  cron:
    name: unassigned R2 tasks
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.task.unassigned_r2.count -o $(su - postgres -c '/usr/local/bin/kurasuta-unassigned-r2-tasks') > /dev/null"

- name: create cron job for incomplete R2 tasks
  cron:
    name: incomplete R2 tasks
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.task.incomplete_r2.count -o $(su - postgres -c '/usr/local/bin/kurasuta-assigned-incomplete-r2-tasks') > /dev/null"

- name: create cron job for sourceless samples
  cron:
    name: samples without source
    minute: 0
    job: "/usr/bin/zabbix_sender -c /etc/zabbix/zabbix_agentd.conf -k kurasuta.sample.sourceless -o $(su - postgres -c '/usr/local/bin/kurasuta-samples-without-source') > /dev/null"

- name: create cron job to process nginx log
  cron:
    name: nginx log processor
    minute: 5
    job: "python /opt/Server/tools/process-nginx-log.py /var/log/nginx/kurasuta_backend_api_access.log"
